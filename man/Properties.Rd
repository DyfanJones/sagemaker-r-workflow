% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_properties.R
\name{Properties}
\alias{Properties}
\title{Workflow Properties Class}
\description{
Properties for use in workflow expressions.
}
\section{Super classes}{
\code{\link[sagemaker.workflow:PropertiesMeta]{sagemaker.workflow::PropertiesMeta}} -> \code{\link[sagemaker.workflow:PipelineVariable]{sagemaker.workflow::PipelineVariable}} -> \code{Properties}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{shape_name}}{The botocore sagemaker service model shape name.}

\item{\code{shape_names}}{A List of the botocore sagemaker service model shape name}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{expr}}{The 'Get' expression dict for a `Properties`.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Properties$new()}}
\item \href{#method-clone}{\code{Properties$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="PropertiesMeta" data-id="format">}\href{../../sagemaker.workflow/html/PropertiesMeta.html#method-format}{\code{sagemaker.workflow::PropertiesMeta$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="PipelineVariable" data-id="endswith">}\href{../../sagemaker.workflow/html/PipelineVariable.html#method-endswith}{\code{sagemaker.workflow::PipelineVariable$endswith()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="PipelineVariable" data-id="startswith">}\href{../../sagemaker.workflow/html/PipelineVariable.html#method-startswith}{\code{sagemaker.workflow::PipelineVariable$startswith()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="PipelineVariable" data-id="to_string">}\href{../../sagemaker.workflow/html/PipelineVariable.html#method-to_string}{\code{sagemaker.workflow::PipelineVariable$to_string()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a Properties instance representing the given shape.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Properties$new(
  path,
  shape_name = NULL,
  shape_names = NULL,
  service_name = "sagemaker"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{(str): The parent path of the Properties instance.}

\item{\code{shape_name}}{(str): The botocore sagemaker service model shape name.}

\item{\code{shape_names}}{(str): A List of the botocore sagemaker service model shape name.}

\item{\code{service_name}}{(str):}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Properties$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
