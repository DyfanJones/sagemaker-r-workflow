% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_clarify_check_step.R
\name{ClarifyCheckStep}
\alias{ClarifyCheckStep}
\title{ClarifyCheckStep step for workflow.}
\description{
ClarifyCheckStep step for workflow.

ClarifyCheckStep step for workflow.
}
\section{Super classes}{
\code{\link[sagemaker.workflow:Entity]{sagemaker.workflow::Entity}} -> \code{\link[sagemaker.workflow:Step]{sagemaker.workflow::Step}} -> \code{ClarifyCheckStep}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dict that is used to define the ClarifyCheck step.}

\item{\code{properties}}{A Properties object representing the output parameters of the ClarifyCheck step.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ClarifyCheckStep$new()}}
\item \href{#method-to_request}{\code{ClarifyCheckStep$to_request()}}
\item \href{#method-clone}{\code{ClarifyCheckStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../sagemaker.workflow/html/Step.html#method-format}{\code{sagemaker.workflow::Step$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructs a ClarifyCheckStep.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClarifyCheckStep$new(
  name,
  clarify_check_config,
  check_job_config,
  skip_check = FALSE,
  register_new_baseline = FALSE,
  model_package_group_name = NULL,
  supplied_baseline_constraints = NULL,
  display_name = NULL,
  description = NULL,
  cache_config = NULL,
  depends_on = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the ClarifyCheckStep step.}

\item{\code{clarify_check_config}}{(ClarifyCheckConfig): A ClarifyCheckConfig instance.}

\item{\code{check_job_config}}{(CheckJobConfig): A CheckJobConfig instance.}

\item{\code{skip_check}}{(bool or PipelineNonPrimitiveInputTypes): Whether the check
should be skipped (default: False).}

\item{\code{register_new_baseline}}{(bool or PipelineNonPrimitiveInputTypes): Whether
the new baseline should be registered (default: False).}

\item{\code{model_package_group_name}}{(str or PipelineNonPrimitiveInputTypes): The name of a
registered model package group, among which the baseline will be fetched
from the latest approved model (default: None).}

\item{\code{supplied_baseline_constraints}}{(str or PipelineNonPrimitiveInputTypes): The S3 path
to the supplied constraints object representing the constraints JSON file
which will be used for drift to check (default: None).}

\item{\code{display_name}}{(str): The display name of the ClarifyCheckStep step (default: None).}

\item{\code{description}}{(str): The description of the ClarifyCheckStep step (default: None).}

\item{\code{cache_config}}{(CacheConfig):  A `sagemaker.workflow.steps.CacheConfig` instance
(default: None).}

\item{\code{depends_on}}{(List[str] or List[Step]): A list of step names or step instances
this `sagemaker.workflow.steps.ClarifyCheckStep` depends on (default: None).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_request"></a>}}
\if{latex}{\out{\hypertarget{method-to_request}{}}}
\subsection{Method \code{to_request()}}{
Updates the dictionary with cache configuration etc.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClarifyCheckStep$to_request()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClarifyCheckStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
