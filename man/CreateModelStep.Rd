% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_steps.R
\name{CreateModelStep}
\alias{CreateModelStep}
\title{Workflow CreateModel class}
\description{
CreateModel step for workflow.
}
\section{Super classes}{
\code{\link[sagemaker.workflow:Entity]{sagemaker.workflow::Entity}} -> \code{\link[sagemaker.workflow:Step]{sagemaker.workflow::Step}} -> \code{CreateModelStep}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dict that is used to call `create_model`.
NOTE: The CreateModelRequest is not quite the args list that workflow needs.
ModelName cannot be included in the arguments.}

\item{\code{properties}}{A Properties object representing the DescribeModelResponse data model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CreateModelStep$new()}}
\item \href{#method-clone}{\code{CreateModelStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../sagemaker.workflow/html/Step.html#method-format}{\code{sagemaker.workflow::Step$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="to_request">}\href{../../sagemaker.workflow/html/Step.html#method-to_request}{\code{sagemaker.workflow::Step$to_request()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a CreateModelStep, given an `sagemaker.model.Model` instance.
             In addition to the Model instance, the other arguments are those that are supplied to
             the `_create_sagemaker_model` method of the `sagemaker.model.Model._create_sagemaker_model`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateModelStep$new(name, model, inputs, depends_on = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the CreateModel step.}

\item{\code{model}}{(Model): A `sagemaker.model.Model` instance.}

\item{\code{inputs}}{(CreateModelInput): A `sagemaker.inputs.CreateModelInput` instance.
Defaults to `None`.}

\item{\code{depends_on}}{(List[str]): A list of step names this `sagemaker.workflow.steps.CreateModelStep`
depends on}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateModelStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
