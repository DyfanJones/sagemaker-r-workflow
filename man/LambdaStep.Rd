% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_lambda_step.R
\name{LambdaStep}
\alias{LambdaStep}
\title{Workflow LambdaStep class}
\description{
Lambda step for workflow.
}
\section{Super classes}{
\code{\link[sagemaker.workflow:Entity]{sagemaker.workflow::Entity}} -> \code{\link[sagemaker.workflow:Step]{sagemaker.workflow::Step}} -> \code{LambdaStep}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dict that is used to define the lambda step.}

\item{\code{properties}}{A Properties object representing the output parameters of the lambda step.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LambdaStep$new()}}
\item \href{#method-to_request}{\code{LambdaStep$to_request()}}
\item \href{#method-clone}{\code{LambdaStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../sagemaker.workflow/html/Step.html#method-format}{\code{sagemaker.workflow::Step$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructs a LambdaStep.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LambdaStep$new(
  name,
  lambda_func,
  display_name = NULL,
  description = NULL,
  inputs = NULL,
  outputs = NULL,
  cache_config = NULL,
  depends_on = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the lambda step.}

\item{\code{lambda_func}}{(str): An instance of sagemaker.lambda_helper.Lambda.
If lambda arn is specified in the instance, LambdaStep just invokes the function,
else lambda function will be created while creating the pipeline.}

\item{\code{display_name}}{(str): The display name of the Lambda step.}

\item{\code{description}}{(str): The description of the Lambda step.}

\item{\code{inputs}}{(dict): Input arguments that will be provided
to the lambda function.}

\item{\code{outputs}}{(List[LambdaOutput]): List of outputs from the lambda function.}

\item{\code{cache_config}}{(CacheConfig):  A `sagemaker.workflow.steps.CacheConfig` instance.}

\item{\code{depends_on}}{(List[str]): A list of step names this `sagemaker.workflow.steps.LambdaStep`
depends on}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_request"></a>}}
\if{latex}{\out{\hypertarget{method-to_request}{}}}
\subsection{Method \code{to_request()}}{
Updates the dictionary with cache configuration.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LambdaStep$to_request()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LambdaStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
