% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_fail_step.R
\name{FailStep}
\alias{FailStep}
\title{Workflow FailStep}
\description{
FailStep` for SageMaker Pipelines Workflows.
}
\section{Super classes}{
\code{\link[sagemaker.workflow:Entity]{sagemaker.workflow::Entity}} -> \code{\link[sagemaker.workflow:Step]{sagemaker.workflow::Step}} -> \code{FailStep}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{error_message}}{An error message defined by the user.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dictionary that is used to define the `FailStep`.}

\item{\code{properties}}{A `Properties` object is not available for the `FailStep`.
Executing a `FailStep` will terminate the pipeline.
`FailStep` properties should not be referenced.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{FailStep$new()}}
\item \href{#method-clone}{\code{FailStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../sagemaker.workflow/html/Step.html#method-format}{\code{sagemaker.workflow::Step$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.workflow" data-topic="Step" data-id="to_request">}\href{../../sagemaker.workflow/html/Step.html#method-to_request}{\code{sagemaker.workflow::Step$to_request()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructs a `FailStep`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FailStep$new(
  name,
  error_message = NULL,
  display_name = NULL,
  description = NULL,
  depends_on = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the `FailStep`. A name is required and must be
unique within a pipeline.}

\item{\code{error_message}}{(str or PipelineNonPrimitiveInputTypes):
An error message defined by the user.
Once the `FailStep` is reached, the execution fails and the
error message is set as the failure reason (default: None).}

\item{\code{display_name}}{(str): The display name of the `FailStep`.
The display name provides better UI readability. (default: None).}

\item{\code{description}}{(str): The description of the `FailStep` (default: None).}

\item{\code{depends_on}}{(List[str] or List[Step]): A list of `Step` names or `Step` instances
that this `FailStep` depends on.
If a listed `Step` name does not exist, an error is returned (default: None).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FailStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
