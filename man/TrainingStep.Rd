% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_steps.R
\name{TrainingStep}
\alias{TrainingStep}
\title{Workflow TraingingStep class}
\description{
Training step for workflow.
}
\section{Super classes}{
\code{\link[R6sagemaker.workflow:Entity]{R6sagemaker.workflow::Entity}} -> \code{\link[R6sagemaker.workflow:Step]{R6sagemaker.workflow::Step}} -> \code{TrainingStep}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dict that is used to call `create_training_job`.
NOTE: The CreateTrainingJob request is not quite the args list that workflow needs.
The TrainingJobName and ExperimentConfig attributes cannot be included.}

\item{\code{properties}}{A Properties object representing the DescribeTrainingJobResponse data model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TrainingStep$new()}}
\item \href{#method-to_request}{\code{TrainingStep$to_request()}}
\item \href{#method-clone}{\code{TrainingStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../R6sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{R6sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../R6sagemaker.workflow/html/Step.html#method-format}{\code{R6sagemaker.workflow::Step$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Construct a TrainingStep, given an `EstimatorBase` instance.
             In addition to the estimator instance, the other arguments are those that are supplied to
             the `fit` method of the `sagemaker.estimator.Estimator`.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingStep$new(
  name,
  estimator,
  inputs = NULL,
  cache_config = NULL,
  depends_on = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the training step.}

\item{\code{estimator}}{(EstimatorBase): A `sagemaker.estimator.EstimatorBase` instance.}

\item{\code{inputs}}{(str or dict or sagemaker.inputs.TrainingInput
       or sagemaker.inputs.FileSystemInput): Information
       about the training data. This can be one of three types:
\itemize{
    \item{(str) the S3 location where training data is saved, or a file:// path in
          local mode.}
    \item{(dict[str, str] or dict[str, sagemaker.inputs.TrainingInput]) If using multiple
          channels for training data, you can specify a dict mapping channel names to
          strings or :func:`~sagemaker.inputs.TrainingInput` objects.}
    \item{(sagemaker.inputs.TrainingInput) - channel configuration for S3 data sources
          that can provide additional information as well as the path to the training
          dataset.
          See :func:`sagemaker.inputs.TrainingInput` for full details.}
    \item{(sagemaker.inputs.FileSystemInput) - channel configuration for
          a file system data source that can provide additional information as well as
          the path to the training dataset.}
    }}

\item{\code{cache_config}}{(CacheConfig):  A `sagemaker.workflow.steps.CacheConfig` instance.}

\item{\code{depends_on}}{(List[str]): A list of step names this `sagemaker.workflow.steps.TrainingStep`
depends on}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_request"></a>}}
\if{latex}{\out{\hypertarget{method-to_request}{}}}
\subsection{Method \code{to_request()}}{
A Properties object representing the DescribeTrainingJobResponse data model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingStep$to_request()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TrainingStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
