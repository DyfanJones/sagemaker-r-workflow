% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow__utils.R
\name{.RegisterModelStep}
\alias{.RegisterModelStep}
\title{Workflow .RegisterModelStep class}
\description{
Register model step in workflow that creates a model package.
}
\keyword{interal}
\section{Super classes}{
\code{\link[R6sagemaker.workflow:Entity]{R6sagemaker.workflow::Entity}} -> \code{\link[R6sagemaker.workflow:Step]{R6sagemaker.workflow::Step}} -> \code{.RegisterModelStep}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{arguments}}{The arguments dict that are used to call `create_model_package`.}

\item{\code{properties}}{A Properties object representing the DescribeTrainingJobResponse data model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{.RegisterModelStep$new()}}
\item \href{#method-clone}{\code{.RegisterModelStep$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.workflow" data-topic="Step" data-id="add_depends_on">}\href{../../R6sagemaker.workflow/html/Step.html#method-add_depends_on}{\code{R6sagemaker.workflow::Step$add_depends_on()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.workflow" data-topic="Step" data-id="format">}\href{../../R6sagemaker.workflow/html/Step.html#method-format}{\code{R6sagemaker.workflow::Step$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="R6sagemaker.workflow" data-topic="Step" data-id="to_request">}\href{../../R6sagemaker.workflow/html/Step.html#method-to_request}{\code{R6sagemaker.workflow::Step$to_request()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructor of a register model step.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.RegisterModelStep$new(
  name,
  content_types,
  response_types,
  inference_instances,
  transform_instances,
  estimator = NULL,
  model_data = NULL,
  model_package_group_name = NULL,
  model_metrics = NULL,
  metadata_properties = NULL,
  approval_status = "PendingManualApproval",
  image_uri = NULL,
  compile_model_family = NULL,
  description = NULL,
  depends_on = NULL,
  tags = NULL,
  container_def_list = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(str): The name of the training step.}

\item{\code{content_types}}{(list): The supported MIME types for the input data (default: None).}

\item{\code{response_types}}{(list): The supported MIME types for the output data (default: None).}

\item{\code{inference_instances}}{(list): A list of the instance types that are used to
generate inferences in real-time (default: None).}

\item{\code{transform_instances}}{(list): A list of the instance types on which a transformation
job can be run or on which an endpoint can be deployed (default: None).}

\item{\code{estimator}}{(EstimatorBase): A `sagemaker.estimator.EstimatorBase` instance.}

\item{\code{model_data}}{: the S3 URI to the model data from training.}

\item{\code{model_package_group_name}}{(str): Model Package Group name, exclusive to
`model_package_name`, using `model_package_group_name` makes the Model Package
versioned (default: None).}

\item{\code{model_metrics}}{(ModelMetrics): ModelMetrics object (default: None).}

\item{\code{metadata_properties}}{(MetadataProperties): MetadataProperties object (default: None).}

\item{\code{approval_status}}{(str): Model Approval Status, values can be "Approved", "Rejected",
or "PendingManualApproval" (default: "PendingManualApproval").}

\item{\code{image_uri}}{(str): The container image uri for Model Package, if not specified,
Estimator's training container image will be used (default: None).}

\item{\code{compile_model_family}}{(str): Instance family for compiled model, if specified, a compiled
model will be used (default: None).}

\item{\code{description}}{(str): Model Package description (default: None).}

\item{\code{depends_on}}{(List[str]): A list of step names this `sagemaker.workflow.steps.TrainingStep`
depends on}

\item{\code{tags}}{: Placeholder}

\item{\code{container_def_list}}{(list): A list of containers.}

\item{\code{...}}{: additional arguments to `create_model`.}

\item{\code{step_type}}{(StepTypeEnum): The type of the step with value `StepTypeEnum.Training`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.RegisterModelStep$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
